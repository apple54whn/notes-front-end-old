(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{456:function(t,v,s){t.exports=s.p+"assets/img/image-20220115194233000.19bbdd2f.png"},457:function(t,v,s){t.exports=s.p+"assets/img/image-20220115200243775.28f11e92.png"},458:function(t,v,s){t.exports=s.p+"assets/img/image-20220115201043149.a8b7f3ee.png"},459:function(t,v,s){t.exports=s.p+"assets/img/image-20220115201327030.ab5f59e8.png"},460:function(t,v,s){t.exports=s.p+"assets/img/image-20220115203949402.b32682b0.png"},461:function(t,v,s){t.exports=s.p+"assets/img/image-20220115204045429.caa56c64.png"},462:function(t,v,s){t.exports=s.p+"assets/img/image-20220115204111711.e1b1c3ea.png"},463:function(t,v,s){t.exports=s.p+"assets/img/image-20220115204134677.c42a2c31.png"},464:function(t,v,s){t.exports=s.p+"assets/img/image-20220115204155514.2338819f.png"},465:function(t,v,s){t.exports=s.p+"assets/img/image-20220115204213689.ae647f32.png"},560:function(t,v,s){"use strict";s.r(v);var e=s(29),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"条件渲染-列表渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件渲染-列表渲染"}},[t._v("#")]),t._v(" 条件渲染&列表渲染")]),t._v(" "),e("h2",{attrs:{id:"v-if-v-show"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-show"}},[t._v("#")]),t._v(" v-if & v-show")]),t._v(" "),e("ul",[e("li",[t._v("v-show就是 display: none")]),t._v(" "),e("li",[t._v("v-show不支持 template")]),t._v(" "),e("li",[t._v("v-show不能和v-else一起使用")])]),t._v(" "),e("h2",{attrs:{id:"v-for"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-for"}},[t._v("#")]),t._v(" v-for")]),t._v(" "),e("p",[t._v("也可以用 "),e("code",[t._v("of")]),t._v(" 替代 "),e("code",[t._v("in")]),t._v(" 作为分隔符，因为它更接近 JavaScript 迭代器的语法")]),t._v(" "),e("h3",{attrs:{id:"数组更新检测-🔥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组更新检测-🔥"}},[t._v("#")]),t._v(" 数组更新检测 🔥")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("push()：添加到最后")])]),t._v(" "),e("li",[e("p",[t._v("pop()：弹出最前面的")])]),t._v(" "),e("li",[e("p",[t._v("shift()：弹出最后面的")])]),t._v(" "),e("li",[e("p",[t._v("unshift()：添加到最前面")])]),t._v(" "),e("li",[e("p",[t._v("splice()：增删改都可以")])]),t._v(" "),e("li",[e("p",[t._v("sort()：排序")])]),t._v(" "),e("li",[e("p",[t._v("reverse()：反转")])])]),t._v(" "),e("h3",{attrs:{id:"key-的作用-🔥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key-的作用-🔥"}},[t._v("#")]),t._v(" key 的作用 🔥")]),t._v(" "),e("ul",[e("li",[t._v("key属性主要用在Vue的"),e("strong",[t._v("虚拟DOM算法")]),t._v("，在"),e("strong",[t._v("新旧nodes对比")]),t._v("时"),e("strong",[t._v("辨识VNodes")])]),t._v(" "),e("li",[t._v("如果"),e("strong",[t._v("不使用key")]),t._v("，Vue会使用一种最大限度减少动态元素并且尽可能的尝试"),e("strong",[t._v("就地修改/复用")]),t._v("相同类型元素的算法")]),t._v(" "),e("li",[t._v("而"),e("strong",[t._v("使用key")]),t._v("时，它会"),e("strong",[t._v("基于key的变化重新排列元素顺序")]),t._v("，并且会"),e("strong",[t._v("移除/销毁key不存在的元素")])])]),t._v(" "),e("h3",{attrs:{id:"vnode-🔥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vnode-🔥"}},[t._v("#")]),t._v(" VNode 🔥")]),t._v(" "),e("p",[t._v("全称是"),e("strong",[t._v("Virtual Node")]),t._v("，即"),e("strong",[t._v("虚拟节点")])]),t._v(" "),e("p",[t._v("无论组件还是元素，在Vue中表示出来都是一个个VNode。是一个Javascript对象")]),t._v(" "),e("p",[e("img",{attrs:{src:s(456),alt:"image-20220115194233000"}})]),t._v(" "),e("h3",{attrs:{id:"虚拟dom-🔥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom-🔥"}},[t._v("#")]),t._v(" 虚拟DOM 🔥")]),t._v(" "),e("p",[t._v("如果页面不是一个简单的元素（如div），而是"),e("strong",[t._v("许多元素")]),t._v("，那么他们会形成"),e("strong",[t._v("一个个VNode")]),t._v("，"),e("strong",[t._v("整体")]),t._v("称作虚拟DOM")]),t._v(" "),e("h3",{attrs:{id:"vue-源码对于-key-的判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-源码对于-key-的判断"}},[t._v("#")]),t._v(" Vue 源码对于 key 的判断")]),t._v(" "),e("p",[t._v("基于v3.2.9版本")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("/vue-next/packages/runtime-core/src/renderer.ts")]),t._v("的1600行中")]),t._v(" "),e("p",[e("img",{attrs:{src:s(457),alt:"image-20220115200243775"}})]),t._v(" "),e("h3",{attrs:{id:"没有-key-时的-diff-算法-🔥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#没有-key-时的-diff-算法-🔥"}},[t._v("#")]),t._v(" 没有 key 时的 diff 算法 🔥")]),t._v(" "),e("p",[e("img",{attrs:{src:s(458),alt:"image-20220115201043149"}})]),t._v(" "),e("p",[t._v("上面的diff算法效率并不高：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("c和d")]),t._v("来说它们事实上"),e("strong",[t._v("并不需要有任何的改动")])]),t._v(" "),e("li",[t._v("但是因为我们的c被f所使用了，所有后续所有的内容都要一次进行改动，并且最后进行新增")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(459),alt:"image-20220115201327030"}})]),t._v(" "),e("h3",{attrs:{id:"有-key-时的-diff-算法-🔥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有-key-时的-diff-算法-🔥"}},[t._v("#")]),t._v(" 有 key 时的 diff 算法 🔥")]),t._v(" "),e("p",[e("img",{attrs:{src:s(460),alt:"image-20220115203949402"}})]),t._v(" "),e("ol",[e("li",[e("p",[t._v("第一步的操作是从头开始进行遍历、比较")]),t._v(" "),e("ol",[e("li",[t._v("a和b是一致的会继续进行比较;")]),t._v(" "),e("li",[t._v("c和f因为key不一致，所以就会break跳出循环;")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(461),alt:"image-20220115204045429"}})])]),t._v(" "),e("li",[e("p",[t._v("第二步的操作是从尾部开始进行遍历、比较:")]),t._v(" "),e("p",[e("img",{attrs:{src:s(462),alt:"image-20220115204111711"}})])]),t._v(" "),e("li",[e("p",[t._v("第三步是如果旧节点遍历完毕，但是依然有新的节点，那么就新增节点（"),e("code",[t._v("i>e1 && i<=e2")]),t._v(")")]),t._v(" "),e("p",[e("img",{attrs:{src:s(463),alt:"image-20220115204134677"}})])]),t._v(" "),e("li",[e("p",[t._v("第四步是如果新的节点遍历完毕，但是依然有旧的节点，那么就移除旧节点")]),t._v(" "),e("p",[e("img",{attrs:{src:s(464),alt:"image-20220115204155514"}})])]),t._v(" "),e("li",[e("p",[t._v("第五步是最特色的情况，中间还有很多未知的或者乱序的节点")]),t._v(" "),e("p",[e("img",{attrs:{src:s(465),alt:"image-20220115204213689"}})]),t._v(" "),e("p",[t._v("可以发现，Vue在进行diff算法的时候，会尽量利用我们的key来进行优化操作：")]),t._v(" "),e("ul",[e("li",[t._v("在没有key的时候我们的效率是非常低效的;")]),t._v(" "),e("li",[t._v("在进行插入或者重置顺序的时候，保持相同的key可以让diff算法更加的高效;")])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);